import { LayerOptions, OnMountEvent, OnUnmountEvent, OnUpdateEvent, OnRescaleEvent, OnResizeEvent } from '../../interfaces';
import { IntersectionReferenceSystem } from '../../control';
export declare abstract class Layer {
    private _id;
    private _order;
    private _options;
    private loading;
    private _element?;
    private _opacity;
    private _referenceSystem?;
    private _data?;
    private _visible;
    private _interactive;
    constructor(id?: string, options?: LayerOptions);
    get id(): string;
    get element(): HTMLElement;
    get options(): LayerOptions;
    set options(options: LayerOptions);
    set isLoading(loading: boolean);
    get isLoading(): boolean;
    set opacity(opacity: number);
    get opacity(): number;
    set order(order: number);
    get order(): number;
    set interactive(shouldBeInteractive: boolean);
    get interactive(): boolean;
    get referenceSystem(): IntersectionReferenceSystem;
    set referenceSystem(referenceSystem: IntersectionReferenceSystem);
    get data(): any;
    set data(data: any);
    get isVisible(): boolean;
    setData(data: any): void;
    clearData(): void;
    setVisibility(visible: boolean): void;
    onMount(event: OnMountEvent): void;
    onUnmount(event?: OnUnmountEvent): void;
    onResize(event: OnResizeEvent): void;
    onUpdate(event: OnUpdateEvent): void;
    onRescale(event: OnRescaleEvent): void;
    onOpacityChanged(opacity: number): void;
    onOrderChanged(order: number): void;
    onInteractivityChanged(interactive: boolean): void;
}
